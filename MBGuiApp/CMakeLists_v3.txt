cmake_minimum_required(VERSION 2.6)
PROJECT(timtut2)
SET(CMAKE_COLOR_MAKEFILE ON)
# set path to additional CMake modules
SET(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake_find_rules ${CMAKE_MODULE_PATH})
FIND_PACKAGE(QGIS REQUIRED)
IF (NOT QGIS_FOUND)
  MESSAGE (SEND_ERROR "QGIS dependency was not found!")
ENDIF (NOT QGIS_FOUND)
IF (WIN32)
  # expect that classes are being imported by default
  # Note: MSVC doesn't like when the macros are quotes
  # and MSYS doesn't like them unqouted (bacause of braces)
  # import qgis classes
  IF (MSVC)
  ADD_DEFINITIONS(-D_USE_MATH_DEFINES)
    ADD_DEFINITIONS("-DGUI_EXPORT=__declspec(dllimport)")
    ADD_DEFINITIONS("-DCORE_EXPORT=__declspec(dllimport)")
    ADD_DEFINITIONS("-DAPP_EXPORT=__declspec(dllimport)")
  ELSE (MSVC)
  ADD_DEFINITIONS(-D_USE_MATH_DEFINES)
    ADD_DEFINITIONS("\"-DGUI_EXPORT=__declspec(dllimport)\"")
    ADD_DEFINITIONS("\"-DCORE_EXPORT=__declspec(dllimport)\"")
    ADD_DEFINITIONS("\"-DAPP_EXPORT=__declspec(dllimport)\"")
  ENDIF (MSVC)
ELSE (WIN32)
  ADD_DEFINITIONS(-DGUI_EXPORT=)
  ADD_DEFINITIONS(-DCORE_EXPORT=)
  ADD_DEFINITIONS(-DAPP_EXPORT=)
ENDIF (WIN32)

FIND_PACKAGE(GDAL REQUIRED)
IF (NOT GDAL_FOUND)
  MESSAGE (SEND_ERROR "GDAL dependency was not found!")
ENDIF (NOT GDAL_FOUND)

FIND_PACKAGE(GEOS REQUIRED)
IF (NOT GEOS_FOUND)
  MESSAGE (SEND_ERROR "GEOS dependency was not found!")
ENDIF (NOT GEOS_FOUND)

IF (CMAKE_BUILD_TYPE MATCHES Debug)
  ADD_DEFINITIONS(-Dtimtut2DEBUG=1)
ENDIF (CMAKE_BUILD_TYPE MATCHES Debug)
########################################################
# Files

SET (timtut2_SRCS
     main.cpp
     qtmbparams.cpp
     qtcanvas.cpp
     mycanvasview.cpp
     mymenuprovider.cpp
     myattributetable.cpp
     mainwindow.cpp
     commands.cpp
     mysetdatapathdialog.cpp
     attribute_table/qgsattributetabledialog.cpp
#     attribute_table/gui/attributetable/qgsattributetableview.cpp
     attribute_table/qgsdelattrdialog.cpp
     attribute_table/qgsaddattrdialog.cpp
     attribute_table/qgsfieldcalculator.cpp
     attribute_table/qgsclipboard.cpp
     attribute_table/ogr/qgsvectorlayersaveasdialog.cpp
     attribute_table/qgsfeatureaction.cpp
     attribute_table/qgsguivectorlayertools.cpp
     attribute_table/qgsidentifyresultsdialog.cpp
#     attribute_table/qgsrasterlayerproperties.cpp
#     attribute_table/qgsmaplayerstyleguiutils.cpp
 attribute_table/qgsstatusbarcoordinateswidget.cpp
 attribute_table/qgsmaptoolidentifyaction.cpp

)

# This tut uses no UIs
SET (timtut2_UIS
    ui/mainwindowbase.ui
    ui/setdatapathdialog.ui
    ui/qgsattributetabledialog.ui
    ui/qgsdualviewbase.ui
    ui/qgsfieldconditionalformatwidget.ui
    ui/qgsaddattrdialogbase.ui
    ui/qgsdelattrdialogbase.ui
    ui/qgsfieldcalculatorbase.ui
    ui/qgsopenvectorlayerdialogbase.ui
    ui/qgsvectorlayersaveasdialogbase.ui
    ui/qgsextentgroupboxwidget.ui
    ui/qgsdatumtransformdialogbase.ui
    ui/qgsidentifyresultsbase.ui
#    ui/qgsrasterlayerpropertiesbase.ui
)

# This tut needs no MOC
SET (timtut2_MOC_HDRS
    qtmbparams.h
    qtcanvas.h
    mycanvasview.h
    mymenuprovider.h
    myattributetable.h
    mainwindow.h
    commands.h
    mysetdatapathdialog.h
    attribute_table/qgsattributetabledialog.h
#    attribute_table/gui/attributetable/qgsattributetableview.h
    attribute_table/qgsdelattrdialog.h
    attribute_table/qgsaddattrdialog.h
    attribute_table/qgsfieldcalculator.h
    attribute_table/qgsclipboard.h
    attribute_table/ogr/qgsvectorlayersaveasdialog.h
    attribute_table/qgsfeatureaction.h
    attribute_table/qgsguivectorlayertools.h
    attribute_table/qgsidentifyresultsdialog.h
#    attribute_table/qgsrasterlayerproperties.h
#    attribute_table/qgsmaplayerstyleguiutils.h
    attribute_table/qgsstatusbarcoordinateswidget.h
    attribute_table/qgsmaptoolidentifyaction.h
)

#SET(IMAGE_RCCS ../images/images.qrc)

SET (timtut2_RCCS
 resources.qrc
)

SET (QT_USE_QT3SUPPORT FALSE)
SET (QT_USE_QTGUI TRUE)
SET (QT_USE_QTSQL TRUE)
SET (QT_USE_QTSVG TRUE)
SET (QT_USE_QTXML TRUE)
SET (QT_USE_QTNETWORK TRUE)
FIND_PACKAGE(Qt4 REQUIRED)
INCLUDE( ${QT_USE_FILE} )
#INCLUDE(${CMAKE_CURRENT_SOURCE_DIR}/../../../qt-solutions/qtpropertybrowser/CMakeLists.txt) #(F:/Sams_Files/FY_2012/MergeBathy_Repos/mergeBathy_Qt/qt-solutions/qtpropertybrowser/src/
########################################################
# Build

QT4_WRAP_UI (timtut2_UIS_H  ${timtut2_UIS})

QT4_WRAP_CPP (timtut2_MOC_SRCS  ${timtut2_MOC_HDRS})

QT4_ADD_RESOURCES(timtut2_RCC_SRCS ${timtut2_RCCS})

#QT4_ADD_RESOURCES(IMAGE_RCC_SRCS ${IMAGE_RCCS})

ADD_EXECUTABLE (timtut2 MACOSX_BUNDLE WIN32 ${timtut2_SRCS} ${timtut2_MOC_SRCS} ${timtut2_RCC_SRCS} ${timtut2_UIS_H} ${IMAGE_RCC_SRCS})


INCLUDE_DIRECTORIES(
     ${GDAL_INCLUDE_DIR}
     ${GEOS_INCLUDE_DIR}
     ${CMAKE_CURRENT_BINARY_DIR}
     ${QT_INCLUDE_DIR}
     ${QGIS_INCLUDE_DIR}
     F:/Sams_Files/FY_2012/MergeBathy_Repos/mergeBathy_Qt/QtPropertyBrowser-master/QtPropertyBrowser-master/src
#     ${CMAKE_CURRENT_BINARY_DIR}/../ui
     ${CMAKE_CURRENT_BINARY_DIR} attribute_table
     ${CMAKE_CURRENT_BINARY_DIR} attribute_table/gui
#     attribute_table
#     attribute_table/gui
     C:/OSGeo4W/include/qt4
     C:/OSGeo4W/include/qt4/QtCrypto
     C:/OSGeo4W/include/qwt
     .
)
#INCLUDE_DIRECTORIES(SYSTEM
#  ${QWT_INCLUDE_DIR}
#  ${QT_QTUITOOLS_INCLUDE_DIR}
#  ${QSCINTILLA_INCLUDE_DIR}
#  ${QEXTSERIALPORT_INCLUDE_DIR}
#)
#INCLUDE_DIRECTORIES(SYSTEM
#  ${SPATIALITE_INCLUDE_DIR}
#  ${SQLITE3_INCLUDE_DIR}
#  ${PROJ_INCLUDE_DIR}
#  ${GEOS_INCLUDE_DIR}
#  ${GDAL_INCLUDE_DIR}
#  ${QWTPOLAR_INCLUDE_DIR}
#  ${QCA_INCLUDE_DIR}
#  )

#${CMAKE_CURRENT_SOURCE_DIR}/../../../qt-solutions/qtpropertybrowser/src/


#This is probably no longer needed, but I will leave it in for Win machines for the moment
IF(QT_QTSQL_FOUND)
 FIND_LIBRARY(QT_QTSQL_LIBRARY NAMES QtSql QtSql4 PATHS ${QT_LIBRARY_DIR} NO_DEFAULT_PATH)
 SET(QT_LIBRARIES ${QT_LIBRARIES} ${QT_QTSQL_LIBRARY})
ENDIF(QT_QTSQL_FOUND)


######################################################################################################
#IF (WIN32)
#    ## Windows common build here
#    IF (!${CMAKE_TARGET.arch, x86_64))
#        message("x86 build")
#        SET (BITS 32bit)
#        ## Windows x86 (32bit) specific build here
#    ELSE
#        MESSAGE (SEND_MESSAGE "x86_64 build!")
#        SET (BITS 64bit)
#        ## Windows x64 (64bit) specific build here
#    ENDIF
#ENDIF

SET (BITS 32bit)

FIND_LIBRARY(QT_QTPROPERTYBROWSER_LIBRARY NAMES QtPropertyBrowser PATHS ${QT_LIBRARY_DIR} "F:/Sams_Files/FY_2012/MergeBathy_Repos/mergeBathy_Qt/QtPropertyBrowser-master/build-QtPropertyBrowser-master-Desktop_Qt_4_8_6_MSVC2010_32bit-Default/bin/")

#FIND_LIBRARY(QT_QTPROPERTYBROWSER_LIBRARY NAMES QtSolutions_PropertyBrowser-headd PATHS ${QT_LIBRARY_DIR} "F:/Sams_Files/FY_2012/MergeBathy_Repos/mergeBathy_Qt/qt-solutions/qtpropertybrowser/lib/$$BITS/")
SET(QT_LIBRARIES ${QT_LIBRARIES} ${QT_QTPROPERTYBROWSER_LIBRARY})

FIND_LIBRARY(QT_QWT_LIBRARY NAMES qwt PATHS ${QT_LIBRARY_DIR} "C:/OSGeo4W/lib/")
SET(QT_LIBRARIES ${QT_LIBRARIES} ${QT_QWT_LIBRARY})

#Rel
#LIBS += -L"F:/Sams_Files/FY_2012/MergeBathy_Repos/mergeBathy_Qt/qt-solutions/qtpropertybrowser/lib/$$BITS/" -lQtSolutions_PropertyBrowser-head
#RelWithDebInfo
#LIBS += -L"F:/Sams_Files/FY_2012/MergeBathy_Repos/mergeBathy_Qt/qt-solutions/qtpropertybrowser/lib/$$BITS/" -lQtSolutions_PropertyBrowser-headd
######################################################################################################
#ADD_DEFINITIONS(-DQWT_DLL)
TARGET_LINK_LIBRARIES(timtut2
     ${QWT_LIBRARY}
#     ${QT_QTSQL_LIBRARY}
#      ${QT_QTUITOOLS_LIBRARY}
     ${QT_QTWEBKIT_LIBRARY}
      #should only be needed for win
      ${QT_QTMAIN_LIBRARY}
      ${QWTPOLAR_LIBRARY}
  ${QT_LIBRARIES}
  ${QGIS_CORE_LIBRARY}
  ${QGIS_GUI_LIBRARY}
  ${QGIS_ANALYSIS_LIBRARY}
  ${GEOS_LIBRARY}
  ${GDAL_LIBRARY}
#  ${QT_QWT_LIBRARIES}
)

IF (MSVC)
  # Very important or you get all kinds of odd side
  #effects like app crash on start up saying qtgui.dll
  TARGET_LINK_LIBRARIES( timtut2
                         qtmain
                       )
ENDIF (MSVC)

########################################################
# Install






