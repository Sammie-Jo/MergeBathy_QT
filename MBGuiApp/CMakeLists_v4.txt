cmake_minimum_required(VERSION 2.6)
PROJECT(timtut2)
SET(CMAKE_COLOR_MAKEFILE ON)
# set path to additional CMake modules
SET(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake_find_rules ${CMAKE_MODULE_PATH})
FIND_PACKAGE(QGIS REQUIRED)
IF (NOT QGIS_FOUND)
  MESSAGE (SEND_ERROR "QGIS dependency was not found!")
ENDIF (NOT QGIS_FOUND)
IF (WIN32)
  # expect that classes are being imported by default
  # Note: MSVC doesn't like when the macros are quotes
  # and MSYS doesn't like them unqouted (bacause of braces)
  # import qgis classes
  IF (MSVC)
  ADD_DEFINITIONS(-D_USE_MATH_DEFINES)
    ADD_DEFINITIONS("-DGUI_EXPORT=__declspec(dllimport)")
    ADD_DEFINITIONS("-DCORE_EXPORT=__declspec(dllimport)")
    ADD_DEFINITIONS("-DAPP_EXPORT=__declspec(dllimport)")
#    ADD_DEFINITIONS("-DAPP_EXPORT=__declspec(dllexport)")
  ELSE (MSVC)
  ADD_DEFINITIONS(-D_USE_MATH_DEFINES)
    ADD_DEFINITIONS("\"-DGUI_EXPORT=__declspec(dllimport)\"")
    ADD_DEFINITIONS("\"-DCORE_EXPORT=__declspec(dllimport)\"")
    ADD_DEFINITIONS("\"-DAPP_EXPORT=__declspec(dllimport)\"")
#    ADD_DEFINITIONS("\"-DAPP_EXPORT=__declspec(dllexport)\"")
  ENDIF (MSVC)
ELSE (WIN32)
  ADD_DEFINITIONS(-DGUI_EXPORT=)
  ADD_DEFINITIONS(-DCORE_EXPORT=)
  ADD_DEFINITIONS(-DAPP_EXPORT=)
ENDIF (WIN32)

FIND_PACKAGE(GDAL REQUIRED)
IF (NOT GDAL_FOUND)
  MESSAGE (SEND_ERROR "GDAL dependency was not found!")
ENDIF (NOT GDAL_FOUND)

FIND_PACKAGE(GEOS REQUIRED)
IF (NOT GEOS_FOUND)
  MESSAGE (SEND_ERROR "GEOS dependency was not found!")
ENDIF (NOT GEOS_FOUND)

FIND_PACKAGE(GEOS REQUIRED)
IF (NOT QGIS_FOUND)
  MESSAGE (SEND_ERROR "QGIS dependency was not found!")
ENDIF (NOT QGIS_FOUND)

IF (CMAKE_BUILD_TYPE MATCHES Debug)
  ADD_DEFINITIONS(-Dtimtut2DEBUG=1)
ENDIF (CMAKE_BUILD_TYPE MATCHES Debug)

########################################################
# Files
SET (timtut2_SRCS
     main.cpp
     qtmbparams.cpp
     qtcanvas.cpp
     mycanvasview.cpp
     mymenuprovider.cpp
     myattributetable.cpp
     mbguiapp.cpp
     commands.cpp
     mysetdatapathdialog.cpp
     attribute_table/qgsattributetabledialog.cpp
#     attribute_table/gui/attributetable/qgsattributetableview.cpp
     attribute_table/qgsdelattrdialog.cpp
     attribute_table/qgsaddattrdialog.cpp
     attribute_table/qgsfieldcalculator.cpp
     attribute_table/qgsclipboard.cpp
     attribute_table/qgsfeatureaction.cpp
     attribute_table/qgsguivectorlayertools.cpp
     attribute_table/qgsidentifyresultsdialog.cpp
     attribute_table/qgsmaptoolidentifyaction.cpp
     attribute_table/ogr/qgsvectorlayersaveasdialog.cpp
     attribute_table/qgsrasterlayerproperties.cpp
#     attribute_table/qgsvectorlayerproperties.cpp
     attribute_table/qgsmaplayerstyleguiutils.cpp
 attribute_table/qgsstatusbarcoordinateswidget.cpp
    attribute_table/qgsattributetypedialog.cpp
    attribute_table/qgsstatisticalsummarydockwidget.cpp
#    attribute_table/qgsmaptoolpinlabels.cpp
#    attribute_table/qgsmaptoollabel.cpp
#    attribute_table/qgsmaptoolshowhidelabels.cpp
#    attribute_table/qgsmaptoolmovelabel.cpp
#    attribute_table/qgsmaptoolrotatelabel.cpp
#    attribute_table/qgsmaptoolchangelabelproperties.cpp
    attribute_table/qgsundowidget.cpp
#    attribute_table/qgsmaptoolrotatefeature.cpp
    attribute_table/qgsmaptoolrotatepointsymbols.cpp
#    attribute_table/core/raster/qgsrasterrendererregistry.cpp
    attribute_table/qgsmaptoolselectutils.cpp
    attribute_table/qgspointrotationitem.cpp
    attribute_table/qgslabelpropertydialog.cpp
    attribute_table/ogr/qgsopenvectorlayerdialog.cpp
    attribute_table/ogr/qgsnewogrconnection.cpp
    attribute_table/ogr/qgsogrhelperfunctions.cpp
    attribute_table/qgswelcomepageitemsmodel.cpp
    attribute_table/qgswelcomepage.cpp
    attribute_table/qgsversioninfo.cpp
#    attribute_table/qgsabout.cpp
    attribute_table/qgsmaptoolselect.cpp
    attribute_table/qgsmaptoolselectfreehand.cpp
    attribute_table/qgsmaptoolselectpolygon.cpp
    attribute_table/qgsmaptoolselectradius.cpp
    attribute_table/qgsmaptoolselectrectangle.cpp
#    attribute_table/qgsmaptoolsimplify.cpp
    attribute_table/nodetool/qgsmaptoolnodetool.cpp
    attribute_table/nodetool/qgsnodeeditor.cpp
    attribute_table/nodetool/qgsselectedfeature.cpp
    attribute_table/nodetool/qgsvertexentry.cpp
#    attribute_table/qgsapplayertreeviewmenuprovider.cpp
    attribute_table/qgsvisibilitypresets.cpp
#    attribute_table/mbguiappinterface.cpp
    propertybrowserextension/variantmanager.cpp
    propertybrowserextension/variantfactory.cpp
    propertybrowserextension/fileedit.cpp
    propertybrowserextension/fileeditfactory.cpp
    propertybrowserextension/filepathmanager.cpp
    attribute_table/qgshandlebadlayers.cpp
)

# This tut uses no UIs
SET (timtut2_UIS
    ui/mbguiappbase.ui
    ui/setdatapathdialog.ui
    ui/qgsattributetabledialog.ui
    ui/qgsdualviewbase.ui
    ui/qgsfieldconditionalformatwidget.ui
    ui/qgsaddattrdialogbase.ui
    ui/qgsdelattrdialogbase.ui
    ui/qgsfieldcalculatorbase.ui
    ui/qgsopenvectorlayerdialogbase.ui
    ui/qgsextentgroupboxwidget.ui
    ui/qgsdatumtransformdialogbase.ui
    ui/qgsidentifyresultsbase.ui
    ui/qgsvectorlayersaveasdialogbase.ui
    ui/qgsrasterlayerpropertiesbase.ui
#    ui/qgsvectorlayerpropertiesbase.ui
    ui/qgssymbolv2selectordialogbase.ui
    ui/qgsattributetypeedit.ui
    ui/qgsstatisticalsummarybase.ui
    ui/qgsrasterminmaxwidgetbase.ui
    ui/qgsmultibandcolorrendererwidgetbase.ui
    ui/qgspalettedrendererwidgetbase.ui
    ui/qgsrasterhistogramwidgetbase.ui
    ui/qgsattributeloadfrommap.ui
    ui/qgslabelpropertydialogbase.ui
    ui/qgsnewogrconnectionbase.ui
#    ui/qgsabout.ui
    ui/qgsexpressionselectiondialogbase.ui
    ui/qgshandlebadlayersbase.ui
    ui/qgssinglebandgrayrendererwidgetbase.ui
    ui/qgssinglebandpseudocolorrendererwidgetbase.ui
)

# This tut needs no MOC
SET (timtut2_MOC_HDRS
    qtmbparams.h
    qtcanvas.h
    mycanvasview.h
    mymenuprovider.h
    myattributetable.h
    mbguiapp.h
    commands.h
    mysetdatapathdialog.h
    attribute_table/qgsattributetabledialog.h
    attribute_table/qgsdelattrdialog.h
    attribute_table/qgsaddattrdialog.h
    attribute_table/qgsfieldcalculator.h
    attribute_table/qgsclipboard.h
    attribute_table/qgsfeatureaction.h
    attribute_table/qgsguivectorlayertools.h
    attribute_table/qgsidentifyresultsdialog.h
    attribute_table/qgsmaptoolidentifyaction.h
    attribute_table/ogr/qgsvectorlayersaveasdialog.h
    attribute_table/qgsrasterlayerproperties.h
#    attribute_table/qgsvectorlayerproperties.h
    attribute_table/qgsmaplayerstyleguiutils.h
    attribute_table/qgsstatusbarcoordinateswidget.h
    attribute_table/qgsattributetypedialog.h
    attribute_table/qgsstatisticalsummarydockwidget.h
#    attribute_table/qgsmaptoolpinlabels.h
#    attribute_table/qgsmaptoollabel.h
#    attribute_table/qgsmaptoolshowhidelabels.h
#    attribute_table/qgsmaptoolmovelabel.h
#    attribute_table/qgsmaptoolrotatefeature.h
#    attribute_table/qgsmaptoolrotatelabel.h
#    attribute_table/qgsmaptoolchangelabelproperties.h
    attribute_table/qgsundowidget.h
    attribute_table/qgsmaptoolrotatepointsymbols.h
#    attribute_table/core/raster/qgsrasterrendererregistry.h
    attribute_table/qgsmaptoolselectutils.h
    attribute_table/qgspointrotationitem.h
    attribute_table/qgslabelpropertydialog.h
    attribute_table/ogr/qgsopenvectorlayerdialog.h
    attribute_table/ogr/qgsnewogrconnection.h
    attribute_table/ogr/qgsogrhelperfunctions.h
    attribute_table/qgswelcomepageitemsmodel.h
    attribute_table/qgswelcomepage.h
    attribute_table/qgsversioninfo.h
#    attribute_table/qgsabout.h
    attribute_table/qgsmaptoolselect.h
    attribute_table/qgsmaptoolselectfreehand.h
    attribute_table/qgsmaptoolselectpolygon.h
    attribute_table/qgsmaptoolselectradius.h
    attribute_table/qgsmaptoolselectrectangle.h
#    attribute_table/qgsmaptoolsimplify.h
    attribute_table/nodetool/qgsmaptoolnodetool.h
    attribute_table/nodetool/qgsnodeeditor.h
    attribute_table/nodetool/qgsselectedfeature.h
    attribute_table/nodetool/qgsvertexentry.h
#    attribute_table/qgsapplayertreeviewmenuprovider.h
    attribute_table/qgsvisibilitypresets.h
#    attribute_table/mbguiappinterface.h
    propertybrowserextension/variantmanager.h
    propertybrowserextension/variantfactory.h
    propertybrowserextension/fileedit.h
    propertybrowserextension/fileeditfactory.h
    propertybrowserextension/filepathmanager.h
    attribute_table/qgshandlebadlayers.h
)

SET(IMAGE_RCCS images/images.qrc)

SET (timtut2_RCCS
 resources.qrc
)

SET (QT_USE_QT3SUPPORT FALSE)
SET (QT_USE_QTGUI TRUE)
SET (QT_USE_QTSQL TRUE)
SET (QT_USE_QTSVG TRUE)
SET (QT_USE_QTXML TRUE)
SET (QT_USE_QTNETWORK TRUE)
SET (QT_USE_QTOPENGL TRUE)
#FIND_PACKAGE(Qt4 REQUIRED)
IF (Qt:Version STREQUAL "Qt 4.8.6")
    MESSAGE ("Using Qt 4.8.6: /qgis-ltr")

    SET(QGISF qgis-ltr)
    SET(qt "qt4")
    SET(qtversion "4.7")

    FIND_PACKAGE(Qt4 REQUIRED)
    INCLUDE( ${QT_USE_FILE} )

    QT4_WRAP_UI (timtut2_UIS_H          ${timtut2_UIS})
    QT4_WRAP_CPP (timtut2_MOC_SRCS      ${timtut2_MOC_HDRS})
    QT4_ADD_RESOURCES(timtut2_RCC_SRCS  ${timtut2_RCCS})
    QT4_ADD_RESOURCES(IMAGE_RCC_SRCS    ${IMAGE_RCCS})

ELSE (Qt:Version STREQUAL "Qt 5.8.0")
    MESSAGE ("Using Qt 5.8.0: /qgis-dev")

    SET(QGISF qgis-dev)
    SET(qt "qt5")
    SET(qtversion "5.0")

    # Find includes in corresponding build directories
    set(CMAKE_INCLUDE_CURRENT_DIR ON)

    # Instruct CMake to run moc automatically when needed.
    set(CMAKE_AUTOMOC ON)

    # Find the QtWidgets library
    find_package(Qt5Widgets)

    FIND_PACKAGE(Qt5 COMPONENTS Core Widgets Gui REQUIRED)

    QT5_WRAP_UI (timtut2_UIS_H          ${timtut2_UIS})
    QT5_WRAP_CPP (timtut2_MOC_SRCS      ${timtut2_MOC_HDRS})
    QT5_ADD_RESOURCES(timtut2_RCC_SRCS  ${timtut2_RCCS})
    QT5_ADD_RESOURCES(IMAGE_RCC_SRCS    ${IMAGE_RCCS})

ENDIF ()

#allow override keyword if available
#IF (NOT USE_CXX_11)
#  ADD_DEFINITIONS("-Doverride=")
#  ADD_DEFINITIONS("-Dnullptr=0")
#ENDIF()
######################################################
## Don't forget to include output directory, otherwise
## the UI file won't be wrapped!
#INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}
##  ${CMAKE_CURRENT_BINARY_DIR}
##  ${CMAKE_CURRENT_SOURCE_DIR}/../../../src/core
##  ${CMAKE_CURRENT_SOURCE_DIR}/../../../src/core/auth
##  ${CMAKE_CURRENT_SOURCE_DIR}/../../../src/core/composer
##  ${CMAKE_CURRENT_SOURCE_DIR}/../../../src/core/geometry
##  ${CMAKE_CURRENT_SOURCE_DIR}/../../../src/core/raster
##  ${CMAKE_CURRENT_SOURCE_DIR}/../../../src/core/symbology-ng
##  ${CMAKE_CURRENT_BINARY_DIR}/../../../src/ui
##  ${CMAKE_CURRENT_SOURCE_DIR}/../../../src/gui
##  ${CMAKE_CURRENT_SOURCE_DIR}/../../../src/gui/editorwidgets
##  ${CMAKE_CURRENT_SOURCE_DIR}/../../../src/gui/editorwidgets/core
##  ${CMAKE_CURRENT_SOURCE_DIR}/../../../src/gui/attributetable
##  ${CMAKE_CURRENT_SOURCE_DIR}/../../../src/gui/symbology-ng
##  ${CMAKE_CURRENT_SOURCE_DIR}/../../../src/gui/raster
##  ${CMAKE_CURRENT_SOURCE_DIR}/../../../src/python
##  ${CMAKE_CURRENT_SOURCE_DIR}/../../../src/app
##  ${CMAKE_CURRENT_SOURCE_DIR}/../../../src/app/pluginmanager
##  ${CMAKE_CURRENT_SOURCE_DIR}/../../../src/ui
#    ${CMAKE_CURRENT_SOURCE_DIR}/../attribute_table
#  ${CMAKE_CURRENT_SOURCE_DIR}/../attribute_table/gui/attributetable
#   ${CMAKE_CURRENT_SOURCE_DIR}/../ui
#)
#INCLUDE_DIRECTORIES(SYSTEM
#  ${QT_INCLUDE_DIR}
#  ${GDAL_INCLUDE_DIR}
#  ${PROJ_INCLUDE_DIR}
#  ${GEOS_INCLUDE_DIR}
#  ${QCA_INCLUDE_DIR}
#)
#IF (WIN32)
#  SET(PLATFORM_LIBRARIES wsock32)
#ENDIF (WIN32)
########################################################
# Build

#QT4_WRAP_UI (timtut2_UIS_H  ${timtut2_UIS})

#QT4_WRAP_CPP (timtut2_MOC_SRCS  ${timtut2_MOC_HDRS})

#QT4_ADD_RESOURCES(timtut2_RCC_SRCS ${timtut2_RCCS})

#QT4_ADD_RESOURCES(IMAGE_RCC_SRCS ${IMAGE_RCCS})

ADD_EXECUTABLE (timtut2 MACOSX_BUNDLE WIN32 ${timtut2_SRCS} ${timtut2_MOC_SRCS} ${timtut2_RCC_SRCS} ${timtut2_UIS_H} ${IMAGE_RCC_SRCS})

INCLUDE_DIRECTORIES(
     ${GDAL_INCLUDE_DIR}
     ${GEOS_INCLUDE_DIR}
     ${CMAKE_CURRENT_BINARY_DIR}
#     ${QT_INCLUDE_DIR}
     ${QGIS_INCLUDE_DIR}
     ${CMAKE_CURRENT_BINARY_DIR} propertybrowserextension
     F:/Sams_Files/FY_2012/MergeBathy_Repos/mergeBathy_Qt/QtPropertyBrowser-master_Qt5.0/QtPropertyBrowser-master/src
#     F:/Sams_Files/FY_2012/MergeBathy_Repos/mergeBathy_Qt/QtPropertyBrowser-master_Qt${qtversion}/QtPropertyBrowser-master/src
#     ${CMAKE_CURRENT_BINARY_DIR}/../ui
     ${CMAKE_CURRENT_BINARY_DIR} attribute_table
     ${CMAKE_CURRENT_BINARY_DIR} attribute_table/gui
     ${CMAKE_CURRENT_BINARY_DIR} attribute_table/core/geometry
     ${CMAKE_CURRENT_BINARY_DIR} attribute_table/core/raster
#     attribute_table
#     attribute_table/gui
     C:/OSGeo4W/include/${qt}
     C:/OSGeo4W/include/${qt}/QtCrypto
     C:/OSGeo4W/include/${qt}/QtWebKit
     C:/OSGeo4W/include/qwt
     C:/OSGeo4W/apps/${QGISF}/include
#     F:/Sams_Files/FY_2012/MergeBathy_Repos/mergeBathy_Qt/qwtplot3d-0.2.7/qwtplot3d/include
     .
)
IF (Qt:Version STREQUAL "Qt 4.8.6")
    INCLUDE_DIRECTORIES(${QT_INCLUDE_DIR})
ELSE (Qt:Version STREQUAL "Qt 5.8.0")
    INCLUDE_DIRECTORIES(
    C:/Qt/5.8/msvc2015/include/
    C:/Qt/5.8/msvc2015/include/QtWidgets
    ${QT5CORE_DIR}
    ${QT5GUI_DIR}
    ${QT5WIDGETS_DIR}
    ${QT5_DIR}
    )
ENDIF ()

#INCLUDE_DIRECTORIES(SYSTEM
#  ${QWT_INCLUDE_DIR}
#  ${QT_QTUITOOLS_INCLUDE_DIR}
#  ${QSCINTILLA_INCLUDE_DIR}
#  ${QEXTSERIALPORT_INCLUDE_DIR}
#)
#INCLUDE_DIRECTORIES(SYSTEM
#  ${SPATIALITE_INCLUDE_DIR}
#  ${SQLITE3_INCLUDE_DIR}
#  ${PROJ_INCLUDE_DIR}
#  ${GEOS_INCLUDE_DIR}
#  ${GDAL_INCLUDE_DIR}
#  ${QWTPOLAR_INCLUDE_DIR}
#  ${QCA_INCLUDE_DIR}
#  )

#This is probably no longer needed, but I will leave it in for Win machines for the moment
IF(QT_QTSQL_FOUND)
 FIND_LIBRARY(QT_QTSQL_LIBRARY NAMES QtSql QtSql4 PATHS ${QT_LIBRARY_DIR} NO_DEFAULT_PATH)
 SET(QT_LIBRARIES ${QT_LIBRARIES} ${QT_QTSQL_LIBRARY})
ENDIF(QT_QTSQL_FOUND)
######################################################################################################
#IF (WIN32)
#    ## Windows common build here
#    IF (!${CMAKE_TARGET.arch, x86_64))
#        message("x86 build")
#        SET (BITS 32bit)
#        ## Windows x86 (32bit) specific build here
#    ELSE
#        MESSAGE (SEND_MESSAGE "x86_64 build!")
#        SET (BITS 64bit)
#        ## Windows x64 (64bit) specific build here
#    ENDIF
#ENDIF

SET (BITS 32bit)

FIND_LIBRARY(QT_QWTPLOT3D_LIBRARY NAMES qwtplot3d PATHS ${QT_LIBRARY_DIR} "F:/Sams_Files/FY_2012/MergeBathy_Repos/mergeBathy_Qt/qwtplot3d-0.2.7/build-qwtplot3d-Desktop_Qt_4_8_6_MSVC2010_32bit-Release/lib/")
SET(QT_LIBRARIES ${QT_LIBRARIES} ${QT_QWTPLOT3D_LIBRARY})

#FIND_LIBRARY(QT_QWT_LIBRARY NAMES qwt PATHS ${QT_LIBRARY_DIR} "C:/OSGeo4W/lib/")
#SET(QT_LIBRARIES ${QT_LIBRARIES} ${QT_QWT_LIBRARY})

IF (Qt:Version STREQUAL "Qt 4.8.6")
    FIND_LIBRARY(QT_QTPROPERTYBROWSER_LIBRARY NAMES QtPropertyBrowser PATHS ${QT_LIBRARY_DIR} "F:/Sams_Files/FY_2012/MergeBathy_Repos/mergeBathy_Qt/QtPropertyBrowser-master_Qt4.7/build-QtPropertyBrowser-master-Desktop_Qt_4_8_6_MSVC2010_32bit-Default/bin/")
    #FIND_LIBRARY(QT_QTPROPERTYBROWSER_LIBRARY NAMES QtSolutions_PropertyBrowser-headd PATHS ${QT_LIBRARY_DIR} "F:/Sams_Files/FY_2012/MergeBathy_Repos/mergeBathy_Qt/qt-solutions/qtpropertybrowser/lib/$$BITS/")

    FIND_LIBRARY(QT_WEBKIT_LIBRARY NAMES qtwebkitd4 PATHS ${QT_LIBRARY_DIR} "C:/OSGeo4W/lib/")

    #FIND_LIBRARY(QT_QWT3D_LIBRARY NAMES qwtplot3d PATHS ${QT_LIBRARY_DIR} "F:/Sams_Files/FY_2012/MergeBathy_Repos/mergeBathy_Qt/qwtplot3d-0.2.7/build-qwtplot3d-Desktop_Qt_4_8_6_MSVC2010_32bit-Release/lib/")
    #SET(QT_LIBRARIES ${QT_LIBRARIES} ${QT_QWT3D_LIBRARY})

ELSE (Qt:Version STREQUAL "Qt 5.8.0")
    FIND_LIBRARY(QT_QTPROPERTYBROWSER_LIBRARY NAMES QtPropertyBrowser PATHS ${QT_LIBRARY_DIR} "F:/Sams_Files/FY_2012/MergeBathy_Repos/mergeBathy_Qt/QtPropertyBrowser-master_Qt5.0/build-Qt_5_8_0_2015_32bit-RelwDeb/bin/")
    #FIND_LIBRARY(QT_WEBKIT_LIBRARY NAMES qtwebkit5 PATHS ${QT_LIBRARY_DIR} "C:/OSGeo4W/lib/")
ENDIF ()
SET(QT_LIBRARIES ${QT_LIBRARIES} ${QT_QTPROPERTYBROWSER_LIBRARY})
SET(QT_LIBRARIES ${QT_LIBRARIES} ${QT_WEBKIT_LIBRARY})

#Rel
#LIBS += -L"F:/Sams_Files/FY_2012/MergeBathy_Repos/mergeBathy_Qt/qt-solutions/qtpropertybrowser/lib/$$BITS/" -lQtSolutions_PropertyBrowser-head
#RelWithDebInfo
#LIBS += -L"F:/Sams_Files/FY_2012/MergeBathy_Repos/mergeBathy_Qt/qt-solutions/qtpropertybrowser/lib/$$BITS/" -lQtSolutions_PropertyBrowser-headd
######################################################################################################
#ADD_DEFINITIONS(-DQWT_DLL)
#ADD_DEFINITIONS(-DQT_DLL -DQWT3D_DLL -DQT_THREAD_SUPPORT -DQT_OPENGL_LIB) #-DQWT3D_MAKEDLL
TARGET_LINK_LIBRARIES(timtut2
#    ${QT_WEBKIT_LIBRARY}#sam
     ${QWT_LIBRARY}
#     ${QT_QTSQL_LIBRARY}
#      ${QT_QTUITOOLS_LIBRARY}
#     ${QT_QTWEBKIT_LIBRARY}
      #should only be needed for win
#      ${QT_QTMAIN_LIBRARY}
#      ${QWTPOLAR_LIBRARY}
  ${QT_LIBRARIES}
  ${QGIS_CORE_LIBRARY}
  ${QGIS_GUI_LIBRARY}
  ${QGIS_ANALYSIS_LIBRARY}
#  ${QGIS_NETWORK_ANALYSIS_LIBRARY}
  ${QGIS_NETWORK_LIBRARY}
  ${GEOS_LIBRARY}
  ${GDAL_LIBRARY}
#sam
#  ${QT_QWT_LIBRARY}
#${QGISAPP_LIBRARY}
#${QT_QWEBVIEW_PLUGIN_RELEASE}
#qgis_app
#C:/OSGeo4W/apps/qgis-ltr/bin/qgis_app.dll
#C:/OSGeo4W/apps/qgis-ltr/lib/qgis_app.lib
#C:/OSGeo4W/apps/Qt4/plugins/designer/qwebview.dll
#C:/OSGeo4W/apps/Qt4/imports/QtWebKit/qmlwebkitplugind.dll
#C:/OSGeo4W/apps/qgis-ltr/bin/qgis_app.dll
#C:/OSGeo4W/apps/Qt5/lib/Qt5WebKitd.lib
#C:/OSGeo4W/apps/Qt5/lib/Qt5WebKitWidgetsd.lib
#C:/OSGeo4W/lib/QtWebKitd4.lib
#C:/OSGeo4W/lib/QtWebKit4.lib
)



IF (MSVC)
  # Very important or you get all kinds of odd side
  #effects like app crash on start up saying qtgui.dll
  TARGET_LINK_LIBRARIES( timtut2
                         qtmain
                       )
ENDIF (MSVC)

IF (Qt:Version STREQUAL "Qt 5.8.0")
    TARGET_LINK_LIBRARIES( timtut2 Qt5::Widgets)
ENDIF ()


########################################################
# Install





